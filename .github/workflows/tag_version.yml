name: Tag Version

on:
  pull_request:
    types:
      - closed

jobs:
  tag_version:
    if: ${{ github.event.pull_request.merged }} && ${{ github.event.pull_request.base.ref == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Version Type
        id: version-type
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" =~ ^(major|minor|patch)/.*$ ]]; then
            echo "VERSION_TYPE=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "VERSION_TYPE=ignore" >> $GITHUB_OUTPUT
            echo "Branch name does not start with major/, minor/, or patch/. Ignoring versioning."
          fi

      - name: Generate Token
        if: ${{ steps.version-type.outputs.VERSION_TYPE != 'ignore' }}
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}

      - name: Checkout
        if: ${{ steps.version-type.outputs.VERSION_TYPE != 'ignore' }}
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Create Tag
        if: ${{ steps.version-type.outputs.VERSION_TYPE != 'ignore' }}
        id: create-tag
        run: |
          chmod +x ./.github/scripts/create_tag.sh
          echo "VERSION_TAG=$(echo $(./.github/scripts/create_tag.sh ${{ steps.version-type.outputs.VERSION_TYPE }}))" >> $GITHUB_OUTPUT

      - name: Push Tag
        if: ${{ steps.version-type.outputs.VERSION_TYPE != 'ignore' }}
        env:
          VERSION_TAG: ${{ steps.create-tag.outputs.VERSION_TAG }}
        run: |
          echo "VERSION_TAG=$VERSION_TAG"
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag $VERSION_TAG -m "Version $VERSION_TAG"
          git push origin $VERSION_TAG